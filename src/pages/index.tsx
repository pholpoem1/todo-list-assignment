import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import {
  Box,
  Card,
  CardContent,
  CardHeader,
  Grid,
  Typography
} from "@mui/material";

const inter = Inter({ subsets: ["latin"] });

type TPlantType = "Fruit" | "Vegetable";

interface IInitList {
  seq?: number;
  name: string;
  type: TPlantType;
}

const initItems: IInitList[] = [
  {
    type: "Fruit",
    name: "Apple"
  },
  {
    type: "Vegetable",
    name: "Broccoli"
  },
  {
    type: "Vegetable",
    name: "Mushroom"
  },
  {
    type: "Fruit",
    name: "Banana"
  },
  {
    type: "Vegetable",
    name: "Tomato"
  },
  {
    type: "Fruit",
    name: "Orange"
  },
  {
    type: "Fruit",
    name: "Mango"
  },
  {
    type: "Fruit",
    name: "Pineapple"
  },
  {
    type: "Vegetable",
    name: "Cucumber"
  },
  {
    type: "Fruit",
    name: "Watermelon"
  },
  {
    type: "Vegetable",
    name: "Carrot"
  }
];

export default function Home() {
  const [initList, setInitList] = useState<typeof initItems>(initItems);

  const [fruit, setFruit] = useState<typeof initItems>([]);
  const [vegetable, setVegetable] = useState<typeof initItems>([]);

  const ColumnList = ({
    title,
    list
  }: {
    title: TPlantType;
    list: typeof initList;
  }) => {
    return (
      <Card>
        <CardHeader
          title={title}
          sx={{ backgroundColor: "#eceff1", textAlign: "center" }}
        />
        <CardContent
          sx={{ gap: "16px", display: "flex", flexDirection: "column" }}
        >
          {list.map((item, index: number) => {
            return (
              <Box
                padding={"12px"}
                border={"1px solid #eceff1"}
                key={index}
                sx={{ cursor: "pointer" }}
                onClick={() => onClickButton(item, title)}
              >
                <Typography variant={"h5"} textAlign={"center"}>
                  {item.name}
                </Typography>
              </Box>
            );
          })}
        </CardContent>
      </Card>
    );
  };

  const onClickButton = (item: IInitList, title: TPlantType) => {
    setInitList([...initList, item]);

    if (title === "Fruit") {
      const movedList = fruit.filter((list) => list.name !== item.name);
      setFruit(movedList);
    } else {
      const movedList = vegetable.filter((list) => list.name !== item.name);
      setVegetable(movedList);
    }
  };

  const onMoveBack = (item: IInitList) => {
    const timer = setTimeout(() => {
      fruit.forEach((item, index) => {
        setFruit((prevState) => prevState.filter((_, i) => i !== index));
      });

      vegetable.forEach((item, index) => {
        setVegetable((prevState) => prevState.filter((_, i) => i !== index));
      });

      setInitList((prevState) => [...prevState, item]);
    }, 5000);

    return () => clearTimeout(timer);
  };

  const onMoveToColumn = (item: IInitList) => {
    if (item.type === "Fruit") {
      setFruit((prevState) => [...prevState, item]);
    } else {
      setVegetable((prevState) => [...prevState, item]);
    }
    const movedList = initList.filter((list) => list.name !== item.name);

    setInitList(movedList);
  };

  return (
    <>
      <Head>
        <title>TODO LIST</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Grid container spacing={3} columns={{ xs: 4, sm: 8, md: 12 }}>
          <Grid container item xs={2} spacing={2} sm={4} md={4}>
            {initList.map((item, index: number) => {
              return (
                <Grid
                  item
                  xs={12}
                  key={index}
                  sx={{ cursor: "pointer" }}
                  onClick={() => onMoveToColumn(item)}
                  onMouseUp={() => onMoveBack(item)}
                >
                  <Box
                    padding={"12px"}
                    border={"1px solid #eceff1"}
                    key={index}
                  >
                    <Typography variant={"h5"} textAlign={"center"}>
                      {item.name}
                    </Typography>
                  </Box>
                </Grid>
              );
            })}
          </Grid>
          {(["Fruit", "Vegetable"] as TPlantType[]).map(
            (item, index: number) => {
              const list = item === "Fruit" ? fruit : vegetable;
              return (
                <Grid
                  paddingTop={"0px !important"}
                  item
                  xs={2}
                  sm={4}
                  md={4}
                  key={index}
                >
                  <ColumnList title={item} list={list} />
                </Grid>
              );
            }
          )}
        </Grid>
      </main>
    </>
  );
}
